name: dockercompose2886347101567189532
services:
  api:
    build:
      context: C:\TempCSharp\SpecificationPatternPoC
      dockerfile: src/api/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
    image: api
    networks:
      default: null
    ports:
    - mode: ingress
      target: 8080
      protocol: tcp
    - mode: ingress
      target: 8081
      protocol: tcp
    volumes:
    - type: bind
      source: C:\Users\Andrew\AppData\Roaming/Microsoft/UserSecrets
      target: /home/app/.microsoft/usersecrets
      read_only: true
      bind:
        create_host_path: true
    - type: bind
      source: C:\Users\Andrew\AppData\Roaming/ASP.NET/Https
      target: /home/app/.aspnet/https
      read_only: true
      bind:
        create_host_path: true
  pgadmin:
    container_name: airbooking_pgAdmin
    depends_on:
      pgserver:
        condition: service_started
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: app
    image: dpage/pgadmin4:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 80
      published: "5050"
      protocol: tcp
    restart: unless-stopped
    volumes:
    - type: bind
      source: C:\TempCSharp\SpecificationPatternPoC\pgAdmin\pgAdmin
      target: /var/lib/pgadmin
      bind:
        create_host_path: true
    - type: bind
      source: C:\TempCSharp\SpecificationPatternPoC\pgAdmin\pgAdmin_storage
      target: /var/lib/pgadmin/storage
      bind:
        create_host_path: true
  pgserver:
    container_name: airbooking_postgres
    environment:
      POSTGRES_DB: airbooking_db
      POSTGRES_PASSWORD: app
      POSTGRES_USER: app
    hostname: airbooking
    image: postgres:latest
    networks:
      default: null
    ports:
    - mode: ingress
      target: 5432
      published: "5432"
      protocol: tcp
    restart: unless-stopped
networks:
  default:
    name: dockercompose2886347101567189532_default